{
  "id": "bee2f19c-dea5-4424-ab8c-cb59cb310b11",
  "realm": "my-realm",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "ea7954f5-cdcc-43bc-8b87-bf370d432d95",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "bee2f19c-dea5-4424-ab8c-cb59cb310b11",
        "attributes": {}
      },
      {
        "id": "af4ff339-7ca0-4c81-be99-d61f26db48b8",
        "name": "default-roles-my-realm",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "realm-management": [
              "view-users"
            ],
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "bee2f19c-dea5-4424-ab8c-cb59cb310b11",
        "attributes": {}
      },
      {
        "id": "bb276cdf-0977-4540-8d6c-73434b88fca3",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "bee2f19c-dea5-4424-ab8c-cb59cb310b11",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "7eff3272-6d0b-4f8d-a9cf-7d8d2071daeb",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "6cc7f5cd-b7d4-4d94-af9c-85df35d3e0d6",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "15300f40-6391-4628-a8f9-fad0c04cf7ca",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "07ecb7b8-2089-4ea0-b8ac-7a9c939161d8",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "b01beb10-6bdb-470a-8b1d-82af600d9fb8",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "db7888f7-bc9e-448e-a1e8-47dce4076293",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "6462f114-89cf-413b-a0dc-2e7293bfc1c0",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "b5ab60da-81f7-44ae-9740-997ffd3d70cb",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "350a4779-1279-4e72-8d86-07a0a7bac41a",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "create-client",
                "view-identity-providers",
                "view-events",
                "view-authorization",
                "manage-authorization",
                "query-users",
                "query-realms",
                "query-clients",
                "view-users",
                "manage-clients",
                "impersonation",
                "manage-identity-providers",
                "query-groups",
                "manage-events",
                "view-realm",
                "manage-users",
                "view-clients",
                "manage-realm"
              ]
            }
          },
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "b7df926a-c054-4ccc-a3fa-753702726962",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "292ac4aa-5f48-48ac-a1aa-c35843234300",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "e3294184-f844-495d-bbfb-fd8af2865ca7",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "a79da585-371d-42b1-b80c-ea1994d6ecc3",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "f4ceab11-bd1c-4b60-b5be-a5a8c51bbe76",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "1b583c9a-97fd-4a74-b73f-e8d230b92b52",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "e4f9e087-ac90-4867-b740-e293744049c8",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "52c32b27-a054-4256-af44-f953d509bb63",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "ef6b3524-40b0-4a06-9c3f-42a663cbe2c9",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        },
        {
          "id": "d5746331-7d0d-40f2-9699-aa3549210bd5",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
          "attributes": {}
        }
      ],
      "frontend-https": [],
      "security-admin-console": [],
      "admin-cli": [],
      "backend": [],
      "account-console": [],
      "broker": [
        {
          "id": "e5f6b7b5-1b09-4749-89c2-3097f5e6b2f2",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "4167dc92-2e13-4524-a7b6-9af6e4e3ffb8",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "56b3cd31-bcb5-49c4-8bbf-d0716936ba42",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "1f603f21-8179-4dfc-93f2-971c561610e1",
          "attributes": {}
        },
        {
          "id": "0db7cce3-2ab9-4e56-a3cb-70d4ee1731f9",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "1f603f21-8179-4dfc-93f2-971c561610e1",
          "attributes": {}
        },
        {
          "id": "a48633c9-c372-41a1-99b0-89ac8ca08053",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "1f603f21-8179-4dfc-93f2-971c561610e1",
          "attributes": {}
        },
        {
          "id": "f30fecae-bb6e-4de4-b17a-cbbe31be7451",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "1f603f21-8179-4dfc-93f2-971c561610e1",
          "attributes": {}
        },
        {
          "id": "dff3ff5a-0484-443b-bc2c-60aa2da181c4",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "1f603f21-8179-4dfc-93f2-971c561610e1",
          "attributes": {}
        },
        {
          "id": "73b3ed75-b2bf-471a-b9d6-e28b6ab740ea",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "1f603f21-8179-4dfc-93f2-971c561610e1",
          "attributes": {}
        },
        {
          "id": "e0f158b7-fdf9-4ff6-8375-1b12fe20fd6c",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "1f603f21-8179-4dfc-93f2-971c561610e1",
          "attributes": {}
        },
        {
          "id": "b0902478-ae6f-4ad9-b627-5b9933b00098",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "1f603f21-8179-4dfc-93f2-971c561610e1",
          "attributes": {}
        }
      ],
      "frontend": []
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "af4ff339-7ca0-4c81-be99-d61f26db48b8",
    "name": "default-roles-my-realm",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "bee2f19c-dea5-4424-ab8c-cb59cb310b11"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppMicrosoftAuthenticatorName",
    "totpAppGoogleName",
    "totpAppFreeOTPName"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "385c5bea-29db-4c27-84d9-739ac90d2340",
      "createdTimestamp": 1689693046828,
      "username": "test",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "firstName": "Test",
      "lastName": "Testic",
      "credentials": [
        {
          "id": "36a9fdf5-dd3d-4b0e-96b9-fb40a520ee12",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1689693057360,
          "secretData": "{\"value\":\"pRxLD8Ea90IGgO7nKfuzqam/VoMMvyYV1LGkVxSbywE=\",\"salt\":\"gJ6Z0UPiTKlmAxmf0pSuew==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-my-realm"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "1f603f21-8179-4dfc-93f2-971c561610e1",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/my-realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/my-realm/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "a2d05752-8e94-4cd7-9afd-dcec68a1adb6",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/my-realm/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/my-realm/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "4a43141a-6aa9-4471-b454-b8d4cf3b65be",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c3bb2124-0067-4bf1-adce-bb97e9f0e739",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "24df04d4-21e2-4a45-846b-c1d4d4a1df07",
      "clientId": "backend",
      "name": "",
      "description": "",
      "rootUrl": "http://localhost:8080",
      "adminUrl": "http://localhost:8080",
      "baseUrl": "http://localhost:8080",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:8080/*"
      ],
      "webOrigins": [
        "http://localhost:8080"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "post.logout.redirect.uris": "http://localhost:8080/*",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "4167dc92-2e13-4524-a7b6-9af6e4e3ffb8",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8dbccfd6-ec12-44cf-bf94-9e20060a9cac",
      "clientId": "frontend",
      "name": "",
      "description": "",
      "rootUrl": "http://localhost:4200",
      "adminUrl": "http://localhost:4200",
      "baseUrl": "http://localhost:4200",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:4200/*",
        "https://localhost:4200/*"
      ],
      "webOrigins": [
        "https://localhost:4200",
        "http://localhost:4200"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "http://localhost:4200/*##https://localhost:4200/*",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c56f3b2f-8df7-49ae-ae10-d4767a21308b",
      "clientId": "frontend-https",
      "name": "",
      "description": "",
      "rootUrl": "https://localhost:4200",
      "adminUrl": "https://localhost:4200",
      "baseUrl": "https://localhost:4200",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:4200/*",
        "https://localhost:4200/*"
      ],
      "webOrigins": [
        "https://localhost:4200",
        "http://localhost:4200"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "https://localhost:4200/*##http://localhost:4200/*",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "9ba3efdf-9b3a-4ded-a4c4-7fb4d8c8226d",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "ed38fc90-0588-462c-8f0c-9181d4a3f4ac",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/my-realm/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/my-realm/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "0093049d-762c-4460-8fa0-dc925b921f6c",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "55af2599-fc3c-459c-b973-216c9da18238",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "140b7d94-ea3c-4bf4-9470-c204e4582ebd",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "8e3b2a47-3a04-4912-8d8c-635a3bedcd69",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "6bbacbbc-06f3-4eec-ada1-38a00788c187",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "b5dff401-bcf2-4824-a851-06b0c2fc8c23",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "67f7fd5e-2b90-478b-919b-17c82af3161c",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "ec0cc4e1-6022-4373-9ce9-d21b962d18ee",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "94ee64d6-bb2e-4c07-a0a5-f6dc8a22d9eb",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "c194993a-6b5a-4568-bef0-054852c2a100",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "346e70ce-b52a-4af4-ae78-a0d78258080f",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "17bc1345-7e5c-440c-836e-93a2581d9b48",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "7be7833d-5be3-4e33-8a1d-5db767a79d04",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "caa07b0a-19c9-46c6-9acf-21aa03661aaa",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "4a4294b4-69c5-445e-be11-be53dc33aa27",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "846b3218-bf70-487c-8154-61b16a27fc2d",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "e4eb656b-020b-41e2-97c7-c09f016263fc",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "3780cc33-d4f6-422b-aa78-fa26723917ae",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "a749ccdf-4127-4ede-b968-3549948174d2",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "74ce4062-c880-446c-8ff3-ecb1ade76dd3",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bc93f3a8-4ba4-4a9b-b8c9-5af29e51bb95",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "db910824-2354-45c0-82d4-a6f7a8dfbd0e",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "98a04810-0359-4107-91e4-439282703f28",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2f9b302a-2426-4304-a6cf-1fd1fe2c21e3",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "de775cf2-0bc0-4cfa-b829-e08c1e9c9638",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "94ca9d7b-06b6-41a5-bcfc-f4f46d822b2d",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "85f671a8-c122-4c15-9b7d-e12dc243a65b",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bc1dba54-c75d-47f6-ae89-98dadad381d8",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "5238ef9d-da2c-4fb4-aeb2-cadb51d85b5d",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "46e65b3d-873a-42e0-891a-aec2a0a08faa",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0daac965-ce76-4cde-976c-40cee70f8cac",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "b5e348f0-71ea-4ce4-84b3-5fca6cc75a82",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "1f4ed3fb-27d2-49c4-8098-f597b971e039",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "99cc44ab-72f8-487f-bc89-43706e778b84",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9fdd2564-5fff-48c6-812b-d9aac49917d0",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "20ec5db2-f9cc-42c0-b3b3-944c7cf4fb3e",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "a393f00c-41bc-4974-85ef-8bb8e3eb929c",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9844ca8e-94c8-43ff-ab04-043ef9f161c3",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "c07fa901-4816-4d05-bbff-9a19f6d50096",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "63b54524-309a-430e-b378-1b3f17d4e843",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "0b5fc53d-0913-40cf-9c74-7ddebedd0f38",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "c53c6347-0630-4492-afa0-9c327834a86d",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "cdd29e04-689b-4223-bc19-bdb3cf8457bd",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "43a64374-b5a7-4e8e-8d55-0ebae4e14150",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "054d1192-7961-46c8-b554-8b647150f845",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "83bbd23a-fca6-423e-b0c1-03ec3e1a646e",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "f48ae579-6b61-489a-996c-dbd57d97d44a",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "22251148-5314-4ef7-956e-4829572a3b5b"
          ],
          "secret": [
            "3la6iyTFjxU_uVx28e7CRA"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "23ec1e2a-d27d-4688-8c60-3d4d6dc2e7ee",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "20fd8491-e59e-4a30-966d-6b396db5cc6f"
          ],
          "secret": [
            "07WOCqIfDselA9cN37sbX4TsmjBRmQd6iAEiVwN2TU2zGnagtuDR41glFMq6iWPNQAhRalSd-KSdZp-7kI7lgQ"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "8abf4247-e5b6-4251-a562-5db488250c81",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAwdGOEMykqggJVBCKsQlWmgYq2VTOm9UEGPmAv/XPBBvuxPsaK8xzo1K1QQwwsslkVd0O6MaaM+haRU+gGjRrhxxSJBEs+AO1DhFuto8uVp2kr4yZN/Jq3Aej15KA8xQosQWnmcwskyZSk8OLAmBagLbslDUmKkK1m5WqUpG1ONrG9SvfK+nmL5MKSrl6gURj2o1FPXx/eqqdVoZV1jcDGziXz3H4HGtU/BUajAGIikEPK2wCywa9wy8XagGF0ZjIY7XlTmNySnJkfBGFNYFQ1/tZsv+SWFRFPfE4A4sl1jY1UqDEx0uEcnhD2kykgJo4giJOZ63IrKP6lmFRqjh2XQIDAQABAoIBAA71wEvup8USArpQ3oukp2ETGcqVn67qhbrxwyzN6dEs4MSmhxIbYU+ZajEfokCih9KS0fxInA1moVUZPMfZBPW0S2jKRJjOHHL+CHgh3BdGarg8F3V4iiP6mPxiK/7XLv7e611VI5mmCxiprribvFCUDfWwloYLiR39stxVr9G3+rUC69JjkTJWMS4vFD0UxSzhtMn8BdtNTWx0NvIJhhfQJ/GIbeUjCFL3qWqSLGDXOIxdeaDhBuOUV+JRUG3Lv4owlw6LSFlyvGJi2wJhsOYa+oBK6MYqZvIZuI5ZSKr0Nm7ANOUsNyXEpqtQywuA3TVbuG2hhZLGJ9mnLoJj9vcCgYEA9kWK4H03xxMKkxM3EVOQreuVA8lFCZ06xUPHnmqEMOAVUklMnt4Yp0schCCoFihT2nIfmZp6vlKEvlhQj18WjgTEmlu1f8FH5UpOq2SDDwQNxLeSUk+vJSo90mi7GlOBGoKl9vyonf9dciLIRIU3eJ6WyO9PXMcePqjklxXq3e8CgYEAyXmSu1u0WAzZqklV57cnDvHvsb5D9/YgIAzKo8Wn1SytNze8Q9U9RfhuGt+qxrhIr3GPhGyPWYRKHm6FemBh0mznXHOV/W4cnQv+2g6zCiToKVnKKa/Exl/U96FZZNjFrz9I4mudSrRmLXICUdjtJsNwGkpK+krNcG4udJw5fHMCgYEAqQrZJfitpbc7RfMllH4QzGDtu1iXS98h7S/2QJYKwOW/nOj1cAMxVvvmygcEeZka3dICQNRZtnQ769ABFDiH6dn5/Z4/uj64k/nqgBkRIOh+bu42wMszhMY3A0uiSpLRBppxQ1TwhOs5gFPBtc7fYasyAyDJD/0ZlJcnuVFxEv8CgYBOjvrp1z4gvxH4VhQK/91Y9Hkz4y55dxzbomE5Lo7cjkkUKMVd5b24lL/J9sCOL7kXv73oMrRKgUytRQcCyqYZ+KDV6bPoV5EMo2rB981T/UQRK5OqYYDmoONXkzBaJDQguxpePvvb7y+QNM42v9Dotnf1qFZH9fbZCf1PNsMrhQKBgQCh6Dde+cqJPYaWS/dcaqrIlB/omaz3ptDjC/IHBuAQ660PCiImZfEz+hHuh6F/aDqC1nNOKvwSdaBddRFoJV0SIw6L6QRjYJDK3iMrzF2HOGsRR7bqZAkIjKYGNfiWer4NVNzM75MpjcbfNepsRHIb+UkLDEFjSTN11Py2G3xFdQ=="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICnzCCAYcCBgGJaYxnQTANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhteS1yZWFsbTAeFw0yMzA3MTgxNTA3MzZaFw0zMzA3MTgxNTA5MTZaMBMxETAPBgNVBAMMCG15LXJlYWxtMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwdGOEMykqggJVBCKsQlWmgYq2VTOm9UEGPmAv/XPBBvuxPsaK8xzo1K1QQwwsslkVd0O6MaaM+haRU+gGjRrhxxSJBEs+AO1DhFuto8uVp2kr4yZN/Jq3Aej15KA8xQosQWnmcwskyZSk8OLAmBagLbslDUmKkK1m5WqUpG1ONrG9SvfK+nmL5MKSrl6gURj2o1FPXx/eqqdVoZV1jcDGziXz3H4HGtU/BUajAGIikEPK2wCywa9wy8XagGF0ZjIY7XlTmNySnJkfBGFNYFQ1/tZsv+SWFRFPfE4A4sl1jY1UqDEx0uEcnhD2kykgJo4giJOZ63IrKP6lmFRqjh2XQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBkYDDJTj6/OIaQvwc9jjTwNlyYRhBscy+MrTfE1+xs2mj9eaXft4SsleljUk62xMJII0I9yfe2v14Eu+UFJPC3qt1VtqYzNgoV+WNuBUYP4ZqGqearNRq94MbCATEAwWnOBnOVuuSovJnwv5TfeIQyHJRjenv+77eOPcvQeOsJZXvDT1m/iSssc2msMV8ZRBmrx0LD2EphLNnslUPf+S8T6cKDTwsu1vXvIYI6lkmPPvObuZ6vX8IoHi4Y3IUYSBxmcGS3Gskb2heywZyV24dvFZhDz9Fb8FG2Be9GFwYcfVOy4NFVTpUqtxWu6KkpAdJmqa6jm2zi+jEo/ZPVnwHT"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "50afa345-57ff-4b41-a33d-6edfe1bd8679",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEoQIBAAKCAQEAof1DqfjCAGF5GfSJC8bqZ2lS4flIyVtdbMWl8eKbW4hVmsJJknDYD4qT+FaoQqfD3NlCPzB0PJVGLkS7G3+AN/PWlP4aZ+rg6mZF3vRYzvZYIa1ZfCg6chdSAK6e6uhKMEzoGy3HGxox0tN36/ofmV1io2ytFJVT6zhwGCF2uk13RiypPFQ4b5kAmaa0nESW3Y2ixFc8GV5FerKb3O2BMZln/vKc/hT3bRXEt1j2+MhAI8YYvhm9CjLiBdH1j1oPRrV9RLNYTcbnWpuECmWf5nfGEb1Nbicub1EAKbInl/ydCVwg1vDcUiyxXvt2lYBwyRLEtfTotyK/3XToqAhAcwIDAQABAoH/YoJn9Rh04gw2MFhic4zVc/aNZSRuE3nlHHrnNYNe37PO5uWF75PeuZTGrUq/2cksMC2R+PK4pfB+a+qOx2RZcgpuaHLY+SqLtAAJrCOPJB6T7kQUYUm4b8C+zB/CPwFKHIm/tDvoWUGJIlsxnhWJOSOc5Dmyqq7fH5UnIYWVRW/e5qaL7uB7/zRf64t5PTqt4C4ex0ZBSng6qUkPcVv0hPYLE/zXE9w7ZyepyMKcR0EI/AVs6QzIZht5vKeZJLNbu4PCUHmhSV1KMqaxtTW8WC7ULG0Na7wuPUoUbR7ZCZSxHoSIP0D3Nuc/UuS3y+84h4oHRM1ABjB9DrKv3sGtAoGBAM3+f/yPmoVvZPWSMrr04WSdLiRqasAhd23QVKAclULd9gpo4pdbMQcArYruxIumt1NJtUcOlx9GOsNjmIPaUeXqe5j4Aat3zhGJuDiQoB4w+Mj6Cmcd4wNecX4WUov+UaZueF1qzbnNq2RxomFvlIlpszgZ3KxnaPzwCwaqMjg9AoGBAMlQFe0dykdaG/ZYFdKLP8CKwDg7+ZWSs68ptTg32BMsrzi/WG83wDmwT8AMzEbubiOyImH698wKtW4LU0ciyeWHChG59Y9Ucuq3fz1uayiZTTkMqofKE1e691mVUuYo68NzJ5tMMxRLKs8h4tfE85LlVhxvYLTvtCJ+VeXXSTZvAoGBAL1tLXCo9aWC3EpemLwHeEU3rTjbizMHE3YuP8PExRVqW1kTPluFBj60RuId0yvAsZCrlUG0jw+5W0xWB+goGWveBq6SUabGUv8ZsAiEJlndGspl9K8CcsGkVaVnDZ2izp7Hs3PkRS55jQSe4n3LR8JdKuuKDL2VkpwWeW01kVzZAoGAdcYRndAw1/+CnmM4GR34JSfHft6vjG7wCkkHSSV6lvUsabGgBikCn31jmsKh+9lfvChp7xKJR+j37bJYfSSAI3UWUfqOC9VnCaRin0jrDixpvjeHyLtTB59NOC6g+h/0ljrXcAZrV7MGD3oOoRcLPORItYf/drtJkmiAzl9d6KcCgYBQLfQcFahyV26bWIK5B1j0249nYK+ZjEZmIrMv19zblThRXcQ3QPd8nNF3wk6U6WogKhCGzP4kiURuzWVMXtm9i8WfCbhLtW3oKZn+M+mL3dmeQ8JKR8tiD+Jvof6r7OFKNORrX1FB5yAu9UUq5i7jg5wfJKtTi8A0VhN2gThivg=="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICnzCCAYcCBgGJaYxo/DANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhteS1yZWFsbTAeFw0yMzA3MTgxNTA3MzZaFw0zMzA3MTgxNTA5MTZaMBMxETAPBgNVBAMMCG15LXJlYWxtMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAof1DqfjCAGF5GfSJC8bqZ2lS4flIyVtdbMWl8eKbW4hVmsJJknDYD4qT+FaoQqfD3NlCPzB0PJVGLkS7G3+AN/PWlP4aZ+rg6mZF3vRYzvZYIa1ZfCg6chdSAK6e6uhKMEzoGy3HGxox0tN36/ofmV1io2ytFJVT6zhwGCF2uk13RiypPFQ4b5kAmaa0nESW3Y2ixFc8GV5FerKb3O2BMZln/vKc/hT3bRXEt1j2+MhAI8YYvhm9CjLiBdH1j1oPRrV9RLNYTcbnWpuECmWf5nfGEb1Nbicub1EAKbInl/ydCVwg1vDcUiyxXvt2lYBwyRLEtfTotyK/3XToqAhAcwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBU3/WMEEUQlAa/LGLp4C/jjRDRuMDm443PgOPKOiMkjSadiTAJAcY1AERKwr43ibhLEHqpW5BfRR5ClN6rk/vIocSsASo80uHm2HWlBbAUjaSa/BhPKAGIaZv2fViR9p+9cuAKG/ptiM3rw4OqwVsI3/fFxuNyWZDMM6hfJsqoWuSIZcHgqsBvPsjcAM9A2zl5TaGlNiXAZ5K4z9iff4jzFddnpAHc6aPwjewa+osDmp5uqAt5bXoTe9d7qo7qZSnWVSiaX1wJ/UtalxfaqkBTnliS5ZAlRqMJUFVvF5sIbF/0I+PJfuwkYOUTR2XTGYPcwdGMLpaNvJU/0eXslg3k"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "d882a710-8533-4ddf-b326-54c683916178",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6f30cd0b-8f51-4685-9fff-55724dbfe6d4",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "15fdf055-fbad-4f05-82db-945bfa69c18f",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9f965987-07b6-4c00-b498-0279a35e1bda",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2865aada-ef1e-44a2-9b1a-8e045dca1e5b",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "547853ff-d5a7-44e5-8982-8e20a7334eb2",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9c1d89a7-1387-452d-98ae-82f1b05675f8",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "33779387-df8f-4cac-85b1-a8c46bedfd81",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6c260bc0-cbb0-4e6b-971d-eb8a4bd41d47",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "38b9e1b5-a6d9-452b-b10b-0bd88e7b9b7b",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d85aa678-4268-4ca9-a481-be7108a24fe2",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3b6f1bff-a019-4c06-9ab8-9c65834204c4",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "91584efa-86c5-4e6e-8148-3d479cc9f4e1",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "02aa4eb7-0531-4a56-91d5-ae5a8c7a0887",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e54e1190-f3aa-4498-a46f-1bf001f969f4",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0c968d76-d97a-4eeb-98a7-2b8a7f37841a",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4614bb2e-1850-45f0-a4c4-2b250a5e8603",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c4039cd6-7c48-4a45-b8fc-bee3f879df6b",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "17077cf2-24fb-4d96-8a85-ed9cf1f6ec07",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6a161bb9-126d-4872-b14a-b756ae665835",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "d378a263-d2b2-49d6-88dd-9ea168c3ebca",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "930c31f5-3d9f-42a5-a29c-101854c9926f",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "21.1.2",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
